{"mappings":"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","sources":["src/src/index.ts","src/index.ts"],"sourcesContent":[null,"import axios from \"axios\";\r\n\r\nenum EstadoEnGarantia {\r\n  \"Aguascalientes\" = 500,\r\n  \"Baja California\" = 3350,\r\n  \"Baja California Sur\" = 3350,\r\n  \"Campeche\" = 575,\r\n  \"Chiapas\" = 500,\r\n  \"Chihuahua\" = 500,\r\n  \"Ciudad de México\" = 500,\r\n  \"Coahuila de Zaragoza\" = 500,\r\n  \"Colima\" = 500,\r\n  \"Durango\" = 575,\r\n  \"Guanajuato\" = 500,\r\n  \"Guerrero\" = 2050,\r\n  \"Hidalgo\" = 1050,\r\n  \"Jalisco\" = 690,\r\n  \"México\" = 500,\r\n  \"Michoacán de Ocampo\" = 1950,\r\n  \"Morelos\" = 500,\r\n  \"Nayarit\" = 500,\r\n  \"Nuevo León\" = 575,\r\n  \"Oaxaca\" = 575,\r\n  \"Puebla\" = 1800,\r\n  \"Querétaro\" = 500,\r\n  \"Quintana Roo\" = 1200,\r\n  \"San Luis Potosí\" = 2200,\r\n  \"Sinaloa\" = 3200,\r\n  \"Sonora\" = 3000,\r\n  \"Tabasco\" = 575,\r\n  \"Tamaulipas\" = 575,\r\n  \"Tlaxcala\" = 1450,\r\n  \"Veracruz de Ignacio de la Llave\" = 3200,\r\n  \"Yucatán\" = 3350,\r\n  \"Zacatecas\" = 575,\r\n}\r\n\r\nexport enum EstadoFirma {\r\n  \"Aguascalientes\" = 5000,\r\n  \"Baja California\" = 5000,\r\n  \"Baja California Sur\" = 5000,\r\n  \"Campeche\" = 5000,\r\n  \"Chiapas\" = 5000,\r\n  \"Chihuahua\" = 5000,\r\n  \"Ciudad de México\" = 300,\r\n  \"Coahuila de Zaragoza\" = 5000,\r\n  \"Colima\" = 5000,\r\n  \"Durango\" = 5000,\r\n  \"Guanajuato\" = 5000,\r\n  \"Guerrero\" = 5000,\r\n  \"Hidalgo\" = 5000,\r\n  \"Jalisco\" = 5000,\r\n  \"México\" = 350,\r\n  \"Michoacán de Ocampo\" = 5000,\r\n  \"Morelos\" = 5000,\r\n  \"Nayarit\" = 5000,\r\n  \"Nuevo León\" = 5000,\r\n  \"Oaxaca\" = 5000,\r\n  \"Puebla\" = 500,\r\n  \"Querétaro\" = 5000,\r\n  \"Quintana Roo\" = 5000,\r\n  \"San Luis Potosí\" = 5000,\r\n  \"Sinaloa\" = 5000,\r\n  \"Sonora\" = 5000,\r\n  \"Tabasco\" = 5000,\r\n  \"Tamaulipas\" = 5000,\r\n  \"Tlaxcala\" = 5000,\r\n  \"Veracruz de Ignacio de la Llave\" = 5000,\r\n  \"Yucatán\" = 5000,\r\n  \"Zacatecas\" = 5000,\r\n}\r\n\r\nexport enum NivelCobertura {\r\n  lite = \"Lite\",\r\n  alpha = \"Alpha\",\r\n  alphaPlus = \"Alpha Plus\",\r\n}\r\n\r\nexport enum Coberturas {\r\n  investigacionRpp = \"Investigacion RPP\",\r\n  seguro = \"Seguro\",\r\n  firmaDeContrato = \"Firma de Contrat\",\r\n  investigacionRG = \"Investigación RG\",\r\n  gestionExtrajudicial = \"Gestion Extrajudicial\",\r\n  recuperacionInmueble = \"Recuperacion de Inmueble\",\r\n  recuperacionDeAdeudos = \"Recuperacion de Adeudos\",\r\n}\r\n\r\ntype Nivel = {\r\n  nombre: NivelCobertura;\r\n  coberturas: Coberturas[];\r\n};\r\n\r\ntype CpData = {\r\n  codigoPostal?: string;\r\n  estado?: string;\r\n  ciudad?: string;\r\n  municipio?: string;\r\n  colonias?: [string];\r\n};\r\n\r\n// TO DO: Bu\r\nexport const permitedCities = [\r\n  \"Cancún\",\r\n  \"Ciudad de México\",\r\n  \"Cuernavaca\",\r\n  \"Guadalajara\",\r\n  \"Zapopan\",\r\n  \"Tonalá\",\r\n  \"Tlajomulco de Zúñiga\",\r\n  \"El Salto\",\r\n  \"Ixtlahuacán de los Membrillos\",\r\n  \"Juanacatlán\",\r\n  \"Zapotlanejo\",\r\n  \"Acatlán de Juárez\",\r\n  \"Tlaquepaque\",\r\n  \"Mérida\",\r\n  \"Monterrey\",\r\n  \"San Nicolás de los Garza\",\r\n  \"Ciudad Apodaca\",\r\n  \"García\",\r\n  \"Ciudad General Escobedo\",\r\n  \"Guadalupe\",\r\n  \"Ciudad Santa Catarina\",\r\n  \"San Pedro Garza García\",\r\n  \"Pachuca de Soto\",\r\n  \"Heroica Puebla de Zaragoza\",\r\n  \"Santiago de Querétaro\",\r\n];\r\n\r\nexport class Cotizador {\r\n  //Variables\r\n  renta: number;\r\n  cp: string;\r\n  estadoGarantia: EstadoEnGarantia;\r\n  estadoFirma: EstadoFirma;\r\n  nivelCobertura: Nivel | undefined;\r\n  resolved: Promise<void>;\r\n  private _perfilRiesgoIncumplimiento: number;\r\n  private _investigacionRg: number;\r\n  private _perfilRiesgoJuicioRecuperacion: number;\r\n  private _perfilRiesgoJuicioAdeudos: number;\r\n\r\n  //Constantes\r\n  private _factorInvestigacion: number;\r\n  private _factorSeguro: number;\r\n  private _factorFirma: number;\r\n  private _factorSolvencia: number;\r\n  private _factorIncumplimiento: number;\r\n  private _factorRecuperacion: number;\r\n  private _factorAdeudos: number;\r\n  private _niveles: Nivel[];\r\n\r\n  //Costos\r\n  costoInvestigacion: number;\r\n  costoSeguro: number;\r\n  costoFirma: number;\r\n  costoInvestigacionRg: number;\r\n  costoIncumplimiento: number;\r\n  costoRecuperacion: number;\r\n  costoAdeudos: number;\r\n\r\n  //Cotizacion\r\n  private _costoDeVentas: number;\r\n  private _utilidad: number;\r\n  precioDeVentas: number;\r\n  precioDeVentasMasIVA: number;\r\n  private _comisionInmobiliaria: number;\r\n\r\n  constructor(\r\n    renta: number,\r\n    cp: string,\r\n    estadoFirma: EstadoFirma,\r\n    nivelCobertura: NivelCobertura\r\n  ) {\r\n    this.renta = renta;\r\n\r\n    this.resolved = new Promise<void>(async (resolve) => {\r\n      var cpData: CpData = await this.getCpData(cp);\r\n      const permitido = permitedCities.find((city) => city === cpData.ciudad);\r\n\r\n      if (!permitido) {\r\n        const edomex = cpData.estado === \"México\";\r\n        if (!edomex) {\r\n          throw new Error(\"No se encontró la ciudad\");\r\n        }\r\n      }\r\n      this.estadoGarantia = EstadoEnGarantia[cpData.estado]\r\n        ? EstadoEnGarantia[cpData.estado]\r\n        : EstadoEnGarantia[\"Ciudad de México\"];\r\n\r\n      this.estadoFirma = estadoFirma\r\n        ? estadoFirma\r\n        : EstadoFirma[\"Ciudad de México\"];\r\n\r\n      //TO DO: traer variables de fuente externa\r\n      this._investigacionRg = 21;\r\n      this._perfilRiesgoIncumplimiento = 0.2;\r\n      this._perfilRiesgoJuicioRecuperacion = 0.025;\r\n      this._perfilRiesgoJuicioAdeudos = 0.025;\r\n\r\n      //TO DO: traer constantes de fuente externa\r\n      this._factorInvestigacion = 1;\r\n      this._factorSeguro = 0.1308;\r\n      this._factorFirma = 1;\r\n      this._factorSolvencia = 1;\r\n      this._factorIncumplimiento = 180;\r\n      this._factorRecuperacion = 3718.88;\r\n      this._factorAdeudos = 14875.51;\r\n\r\n      //TO DO: traer niveles de fuente externa\r\n      this._niveles = [\r\n        {\r\n          nombre: NivelCobertura.alpha,\r\n          coberturas: [\r\n            Coberturas.investigacionRpp,\r\n            Coberturas.firmaDeContrato,\r\n            Coberturas.investigacionRG,\r\n            Coberturas.gestionExtrajudicial,\r\n            Coberturas.recuperacionInmueble,\r\n            Coberturas.recuperacionDeAdeudos,\r\n          ],\r\n        },\r\n        {\r\n          nombre: NivelCobertura.alphaPlus,\r\n          coberturas: [\r\n            Coberturas.investigacionRpp,\r\n            Coberturas.firmaDeContrato,\r\n            Coberturas.investigacionRG,\r\n            Coberturas.gestionExtrajudicial,\r\n            Coberturas.recuperacionInmueble,\r\n            Coberturas.recuperacionDeAdeudos,\r\n            Coberturas.seguro,\r\n          ],\r\n        },\r\n        {\r\n          nombre: NivelCobertura.lite,\r\n          coberturas: [\r\n            Coberturas.investigacionRG,\r\n            Coberturas.gestionExtrajudicial,\r\n            Coberturas.recuperacionInmueble,\r\n          ],\r\n        },\r\n      ];\r\n\r\n      this.nivelCobertura = this._niveles.find(\r\n        (niv) => niv.nombre === nivelCobertura\r\n      )\r\n        ? this._niveles.find((niv) => niv.nombre === nivelCobertura)\r\n        : this._niveles[0];\r\n\r\n      // axios(\"https://www.lycklig.com.mx/products/platos-rosa-con-dorado.json\")\r\n      //   .then((data) => console.log(data.data))\r\n      //   .catch((err) => console.log(err));\r\n\r\n      //setear a 0 costos\r\n      this.costoInvestigacion = 0;\r\n      this.costoSeguro = 0;\r\n      this.costoFirma = 0;\r\n      this.costoInvestigacionRg = 0;\r\n      this.costoIncumplimiento = 0;\r\n      this.costoRecuperacion = 0;\r\n      this.costoAdeudos = 0;\r\n\r\n      //setear a 0 cotización\r\n      this._costoDeVentas = 0;\r\n      this._utilidad = 0;\r\n      this.precioDeVentas = 0;\r\n      this.precioDeVentasMasIVA = 0;\r\n      this._comisionInmobiliaria = 0;\r\n\r\n      this.calcularCostos();\r\n      this.cotizar();\r\n\r\n      console.log(\"Terminando\");\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  private async getCpData(cp: string) {\r\n    // const ciudad = await fetch(\r\n    //   `https://acromatico-cp.uc.r.appspot.com/api/cp/${cp}`,\r\n    //   {\r\n    //     headers: {\r\n    //       \"X-Acromatico-JWT-Token\":\r\n    //         \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2wiOiJBZG1pbiIsImlkIjoiMTIzNDU2In0.lU5p4VREH8qVitzPaNmteGGmtpJA8PwiSNrHkhhJC1o\",\r\n    //     },\r\n    //   }\r\n    // );\r\n\r\n    const ciudadData = await axios.get(\r\n      `https://cps-app.acromatico.dev/api/cp/${cp}`,\r\n      {\r\n        headers: {\r\n          \"X-Acromatico-JWT-Token\":\r\n            \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2wiOiJBZG1pbiIsImlkIjoiMTIzNDU2In0.lU5p4VREH8qVitzPaNmteGGmtpJA8PwiSNrHkhhJC1o\",\r\n        },\r\n      }\r\n    );\r\n    // const ciudadData = await ciudad.json();\r\n\r\n    return ciudadData.data;\r\n  }\r\n\r\n  private calculoUtilidad(renta: number): number {\r\n    let resultado: number;\r\n\r\n    if (renta <= 350 / 0.05) {\r\n      resultado = 0.0428826023 * renta + 2412;\r\n    } else if (renta <= 8205.162) {\r\n      resultado = -0.0128826023 * renta + 2762;\r\n    } else if (renta <= 90000) {\r\n      resultado = 0.3295 * renta;\r\n    } else {\r\n      resultado = 0.23308 * renta + 8684;\r\n    }\r\n\r\n    if (renta <= 350 / 0.05) {\r\n      resultado += 350;\r\n    } else if (renta <= 2000 / 0.05) {\r\n      resultado += 0.05 * renta;\r\n    } else {\r\n      resultado += 2000;\r\n    }\r\n\r\n    resultado = resultado - 821.86;\r\n\r\n    return resultado;\r\n  }\r\n\r\n  calcularCostos() {\r\n    this.costoInvestigacion = this.nivelCobertura?.coberturas.find(\r\n      (cober) => cober === Coberturas.investigacionRpp\r\n    )\r\n      ? this._factorInvestigacion * this.estadoGarantia\r\n      : 0;\r\n    this.costoSeguro = this.nivelCobertura?.coberturas.find(\r\n      (cober) => cober === Coberturas.seguro\r\n    )\r\n      ? this._factorSeguro * this.renta\r\n      : 0;\r\n    this.costoFirma = this.nivelCobertura?.coberturas.find(\r\n      (cober) => cober === Coberturas.firmaDeContrato\r\n    )\r\n      ? this._factorFirma * this.estadoFirma\r\n      : 0;\r\n    this.costoInvestigacionRg = this.nivelCobertura?.coberturas.find(\r\n      (cober) => cober === Coberturas.investigacionRG\r\n    )\r\n      ? this._factorSolvencia * this._investigacionRg\r\n      : 0;\r\n    this.costoIncumplimiento = this.nivelCobertura?.coberturas.find(\r\n      (cober) => cober === Coberturas.gestionExtrajudicial\r\n    )\r\n      ? this._factorIncumplimiento * this._perfilRiesgoIncumplimiento\r\n      : 0;\r\n    this.costoRecuperacion = this.nivelCobertura?.coberturas.find(\r\n      (cober) => cober === Coberturas.recuperacionInmueble\r\n    )\r\n      ? this._factorRecuperacion * this._perfilRiesgoJuicioRecuperacion\r\n      : 0;\r\n    this.costoAdeudos = this.nivelCobertura?.coberturas.find(\r\n      (cober) => cober === Coberturas.recuperacionDeAdeudos\r\n    )\r\n      ? this._factorAdeudos * this._perfilRiesgoJuicioAdeudos\r\n      : 0;\r\n  }\r\n\r\n  cotizar(): number {\r\n    this._costoDeVentas =\r\n      this.costoInvestigacion +\r\n      this.costoSeguro +\r\n      this.costoFirma +\r\n      this.costoInvestigacionRg +\r\n      this.costoIncumplimiento +\r\n      this.costoRecuperacion +\r\n      this.costoAdeudos;\r\n\r\n    this._utilidad = this.calculoUtilidad(this.renta);\r\n\r\n    let precioVentasTemp = this._utilidad + this._costoDeVentas;\r\n\r\n    // Minimo de precio de venta ed de $3500 ya con IVA\r\n    if (precioVentasTemp * 1.16 < 3500) {\r\n      precioVentasTemp = 3500 / 1.16;\r\n    }\r\n\r\n    this.precioDeVentas = Math.floor(precioVentasTemp * 100) / 100;\r\n    this.precioDeVentasMasIVA =\r\n      Math.floor(this.precioDeVentas * 1.16 * 100) / 100;\r\n    this.precioDeVentasMasIVA = Math.ceil(this.precioDeVentasMasIVA / 10) * 10;\r\n    this.precioDeVentas =\r\n      Math.floor((this.precioDeVentasMasIVA / 1.16) * 100) / 100;\r\n    this._comisionInmobiliaria =\r\n      Math.floor(this.precioDeVentasMasIVA * 0.1 * 100) / 100;\r\n\r\n    return this.precioDeVentasMasIVA;\r\n  }\r\n\r\n  cambiarRenta(renta: number): number {\r\n    this.renta = renta;\r\n\r\n    this.calcularCostos();\r\n\r\n    return this.cotizar();\r\n  }\r\n\r\n  cambiarEstadoGarantia(estado: EstadoEnGarantia): number {\r\n    this.estadoGarantia = estado;\r\n\r\n    this.calcularCostos();\r\n\r\n    return this.cotizar();\r\n  }\r\n\r\n  cambiarEstadoFirma(estado: EstadoFirma): number {\r\n    this.estadoFirma = estado;\r\n\r\n    this.calcularCostos();\r\n\r\n    return this.cotizar();\r\n  }\r\n\r\n  cambiarNivel(nivel: NivelCobertura): number {\r\n    this.nivelCobertura = this._niveles.find((niv) => niv.nombre === nivel)\r\n      ? this._niveles.find((niv) => niv.nombre === nivel)\r\n      : this._niveles[0];\r\n\r\n    this.calcularCostos();\r\n\r\n    return this.cotizar();\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.d.ts.map"}