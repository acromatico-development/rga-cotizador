{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["// import axios from \"axios\";\n\nexport enum EstadoEnGarantia {\n  \"Aguascalientes\" = 460,\n  \"Baja California\" = 3350,\n  \"Baja California Sur\" = 3350,\n  \"Campeche\" = 575,\n  \"Chiapas\" = 460,\n  \"Chihuahua\" = 460,\n  \"Ciudad de México\" = 420,\n  \"Coahuila de Zaragoza\" = 460,\n  \"Colima\" = 460,\n  \"Durango\" = 575,\n  \"Guanajuato\" = 460,\n  \"Guerrero\" = 2050,\n  \"Hidalgo\" = 1050,\n  \"Jalisco\" = 690,\n  \"México\" = 500,\n  \"Michoacán de Ocampo\" = 1950,\n  \"Morelos\" = 460,\n  \"Nayarit\" = 460,\n  \"Nuevo León\" = 575,\n  \"Oaxaca\" = 575,\n  \"Puebla\" = 1800,\n  \"Querétaro\" = 460,\n  \"Quintana Roo\" = 1200,\n  \"San Luis Potosí\" = 2200,\n  \"Sinaloa\" = 3200,\n  \"Sonora\" = 3000,\n  \"Tabasco\" = 575,\n  \"Tamaulipas\" = 575,\n  \"Tlaxcala\" = 1450,\n  \"Veracruz de Ignacio de la Llave\" = 3200,\n  \"Yucatán\" = 3350,\n  \"Zacatecas\" = 575,\n}\n\nexport enum EstadoFirma {\n  \"Aguascalientes\" = 5000,\n  \"Baja California\" = 5000,\n  \"Baja California Sur\" = 5000,\n  \"Campeche\" = 5000,\n  \"Chiapas\" = 5000,\n  \"Chihuahua\" = 5000,\n  \"Ciudad de México\" = 300,\n  \"Coahuila de Zaragoza\" = 5000,\n  \"Colima\" = 5000,\n  \"Durango\" = 5000,\n  \"Guanajuato\" = 5000,\n  \"Guerrero\" = 5000,\n  \"Hidalgo\" = 5000,\n  \"Jalisco\" = 5000,\n  \"México\" = 350,\n  \"Michoacán de Ocampo\" = 5000,\n  \"Morelos\" = 5000,\n  \"Nayarit\" = 5000,\n  \"Nuevo León\" = 5000,\n  \"Oaxaca\" = 5000,\n  \"Puebla\" = 500,\n  \"Querétaro\" = 5000,\n  \"Quintana Roo\" = 5000,\n  \"San Luis Potosí\" = 5000,\n  \"Sinaloa\" = 5000,\n  \"Sonora\" = 5000,\n  \"Tabasco\" = 5000,\n  \"Tamaulipas\" = 5000,\n  \"Tlaxcala\" = 5000,\n  \"Veracruz de Ignacio de la Llave\" = 5000,\n  \"Yucatán\" = 5000,\n  \"Zacatecas\" = 5000,\n}\n\nexport enum NivelCobertura {\n  lite = \"Lite\",\n  alpha = \"Alpha\",\n  alphaPlus = \"Alpha Plus\",\n}\n\nexport enum Coberturas {\n  investigacionRpp = \"Investigacion RPP\",\n  seguro = \"Seguro\",\n  firmaDeContrato = \"Firma de Contrat\",\n  investigacionRG = \"Investigación RG\",\n  gestionExtrajudicial = \"Gestion Extrajudicial\",\n  recuperacionInmueble = \"Recuperacion de Inmueble\",\n  recuperacionDeAdeudos = \"Recuperacion de Adeudos\",\n}\n\ntype Nivel = {\n  nombre: NivelCobertura;\n  coberturas: Coberturas[];\n};\n\nexport class Cotizador {\n  //Variables\n  renta: number;\n  estadoGarantia: EstadoEnGarantia;\n  estadoFirma: EstadoFirma;\n  nivelCobertura: Nivel | undefined;\n  private _perfilRiesgoIncumplimiento: number;\n  private _investigacionRg: number;\n  private _perfilRiesgoJuicioRecuperacion: number;\n  private _perfilRiesgoJuicioAdeudos: number;\n\n  //Constantes\n  private _factorInvestigacion: number;\n  private _factorSeguro: number;\n  private _factorFirma: number;\n  private _factorSolvencia: number;\n  private _factorIncumplimiento: number;\n  private _factorRecuperacion: number;\n  private _factorAdeudos: number;\n  private _niveles: Nivel[];\n\n  //Costos\n  costoInvestigacion: number;\n  costoSeguro: number;\n  costoFirma: number;\n  costoInvestigacionRg: number;\n  costoIncumplimiento: number;\n  costoRecuperacion: number;\n  costoAdeudos: number;\n\n  //Cotizacion\n  private _costoDeVentas: number;\n  private _utilidad: number;\n  precioDeVentas: number;\n  precioDeVentasMasIVA: number;\n  private _comisionInmobiliaria: number;\n\n  constructor(\n    renta: number,\n    estadoGarantia: EstadoEnGarantia,\n    estadoFirma: EstadoFirma,\n    nivelCobertura: NivelCobertura\n  ) {\n    this.renta = renta;\n    this.estadoGarantia = estadoGarantia ? estadoGarantia : EstadoEnGarantia[\"Ciudad de México\"];\n    this.estadoFirma = estadoFirma ? estadoFirma : EstadoFirma[\"Ciudad de México\"];\n\n    //TO DO: traer variables de fuente externa\n    this._investigacionRg = 21;\n    this._perfilRiesgoIncumplimiento = 0.2;\n    this._perfilRiesgoJuicioRecuperacion = 0.025;\n    this._perfilRiesgoJuicioAdeudos = 0.025;\n\n    //TO DO: traer constantes de fuente externa\n    this._factorInvestigacion = 1;\n    this._factorSeguro = 0.1308;\n    this._factorFirma = 1;\n    this._factorSolvencia = 1;\n    this._factorIncumplimiento = 180;\n    this._factorRecuperacion = 3718.88;\n    this._factorAdeudos = 14875.51;\n\n    //TO DO: traer niveles de fuente externa\n    this._niveles = [\n      {\n        nombre: NivelCobertura.alpha,\n        coberturas: [\n          Coberturas.investigacionRpp,\n          Coberturas.firmaDeContrato,\n          Coberturas.investigacionRG,\n          Coberturas.gestionExtrajudicial,\n          Coberturas.recuperacionInmueble,\n          Coberturas.recuperacionDeAdeudos,\n        ],\n      },\n      {\n        nombre: NivelCobertura.alphaPlus,\n        coberturas: [\n          Coberturas.investigacionRpp,\n          Coberturas.firmaDeContrato,\n          Coberturas.investigacionRG,\n          Coberturas.gestionExtrajudicial,\n          Coberturas.recuperacionInmueble,\n          Coberturas.recuperacionDeAdeudos,\n          Coberturas.seguro,\n        ],\n      },\n      {\n        nombre: NivelCobertura.lite,\n        coberturas: [\n          Coberturas.investigacionRG,\n          Coberturas.gestionExtrajudicial,\n          Coberturas.recuperacionInmueble,\n        ],\n      },\n    ];\n\n    this.nivelCobertura = this._niveles.find(\n      (niv) => niv.nombre === nivelCobertura\n    )\n      ? this._niveles.find((niv) => niv.nombre === nivelCobertura)\n      : this._niveles[0];\n\n    // axios(\"https://www.lycklig.com.mx/products/platos-rosa-con-dorado.json\")\n    //   .then((data) => console.log(data.data))\n    //   .catch((err) => console.log(err));\n\n    //setear a 0 costos\n    this.costoInvestigacion = 0;\n    this.costoSeguro = 0;\n    this.costoFirma = 0;\n    this.costoInvestigacionRg = 0;\n    this.costoIncumplimiento = 0;\n    this.costoRecuperacion = 0;\n    this.costoAdeudos = 0;\n\n    //setear a 0 cotización\n    this._costoDeVentas = 0;\n    this._utilidad = 0;\n    this.precioDeVentas = 0;\n    this.precioDeVentasMasIVA = 0;\n    this._comisionInmobiliaria = 0;\n\n    this.calcularCostos();\n    this.cotizar();\n  }\n\n  private calculoUtilidad(renta: number): number {\n    let resultado: number;\n\n    if (renta <= 350 / 0.05) {\n      resultado = 0.0428826023 * renta + 2412;\n    } else if (renta <= 8205.162) {\n      resultado = -0.0128826023 * renta + 2762;\n    } else if (renta <= 90000) {\n      resultado = 0.3295 * renta;\n    } else {\n      resultado = 0.23308 * renta + 8684;\n    }\n\n    if (renta <= 350 / 0.05) {\n      resultado += 350;\n    } else if (renta <= 2000 / 0.05) {\n      resultado += 0.05 * renta;\n    } else {\n      resultado += 2000;\n    }\n\n    resultado = resultado - 821.86;\n\n    return resultado;\n  }\n\n  calcularCostos() {\n    this.costoInvestigacion = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.investigacionRpp\n    )\n      ? this._factorInvestigacion * this.estadoGarantia\n      : 0;\n    this.costoSeguro = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.seguro\n    )\n      ? this._factorSeguro * this.renta\n      : 0;\n    this.costoFirma = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.firmaDeContrato\n    )\n      ? this._factorFirma * this.estadoFirma\n      : 0;\n    this.costoInvestigacionRg = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.investigacionRG\n    )\n      ? this._factorSolvencia * this._investigacionRg\n      : 0;\n    this.costoIncumplimiento = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.gestionExtrajudicial\n    )\n      ? this._factorIncumplimiento * this._perfilRiesgoIncumplimiento\n      : 0;\n    this.costoRecuperacion = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.recuperacionInmueble\n    )\n      ? this._factorRecuperacion * this._perfilRiesgoJuicioRecuperacion\n      : 0;\n    this.costoAdeudos = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.recuperacionDeAdeudos\n    )\n      ? this._factorAdeudos * this._perfilRiesgoJuicioAdeudos\n      : 0;\n  }\n\n  cotizar(): number {\n    this._costoDeVentas =\n      this.costoInvestigacion +\n      this.costoSeguro +\n      this.costoFirma +\n      this.costoInvestigacionRg +\n      this.costoIncumplimiento +\n      this.costoRecuperacion +\n      this.costoAdeudos;\n\n    this._utilidad = this.calculoUtilidad(this.renta);\n\n    let precioVentasTemp = this._utilidad + this._costoDeVentas;\n\n    // Minimo de precio de venta ed de $3500 ya con IVA\n    if (precioVentasTemp * 1.16 < 3500) {\n      precioVentasTemp = 3500 / 1.16;\n    }\n\n    this.precioDeVentas = Math.floor(precioVentasTemp * 100) / 100;\n    this.precioDeVentasMasIVA = Math.floor(this.precioDeVentas * 1.16 * 100) / 100;\n    this.precioDeVentasMasIVA = Math.ceil(this.precioDeVentasMasIVA / 10) * 10\n    this.precioDeVentas = Math.floor((this.precioDeVentasMasIVA / 1.16) * 100) / 100;\n    this._comisionInmobiliaria = Math.floor(this.precioDeVentasMasIVA * 0.1 * 100) / 100;\n\n    return this.precioDeVentasMasIVA;\n  }\n\n  cambiarRenta(renta: number): number {\n    this.renta = renta;\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n\n  cambiarEstadoGarantia(estado: EstadoEnGarantia): number {\n    this.estadoGarantia = estado;\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n\n  cambiarEstadoFirma(estado: EstadoFirma): number {\n    this.estadoFirma = estado;\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n\n  cambiarNivel(nivel: NivelCobertura): number {\n    this.nivelCobertura = this._niveles.find((niv) => niv.nombre === nivel)\n      ? this._niveles.find((niv) => niv.nombre === nivel)\n      : this._niveles[0];\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n}\n"],"names":[],"version":3,"file":"index.js.map"}