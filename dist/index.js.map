{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["// import axios from \"axios\";\n\nexport enum EstadoEnGarantia {\n  \"Aguascalientes\" = 460,\n  \"Baja California\" = 3350,\n  \"Baja California Sur\" = 3350,\n  \"Campeche\" = 575,\n  \"Chiapas\" = 460,\n  \"Chihuahua\" = 460,\n  \"Ciudad de México\" = 420,\n  \"Coahuila de Zaragoza\" = 460,\n  \"Colima\" = 460,\n  \"Durango\" = 575,\n  \"Guanajuato\" = 460,\n  \"Guerrero\" = 2050,\n  \"Hidalgo\" = 1050,\n  \"Jalisco\" = 690,\n  \"México\" = 500,\n  \"Michoacán de Ocampo\" = 1950,\n  \"Morelos\" = 460,\n  \"Nayarit\" = 460,\n  \"Nuevo León\" = 575,\n  \"Oaxaca\" = 575,\n  \"Puebla\" = 1800,\n  \"Querétaro\" = 460,\n  \"Quintana Roo\" = 1200,\n  \"San Luis Potosí\" = 2200,\n  \"Sinaloa\" = 3200,\n  \"Sonora\" = 3000,\n  \"Tabasco\" = 575,\n  \"Tamaulipas\" = 575,\n  \"Tlaxcala\" = 1450,\n  \"Veracruz de Ignacio de la Llave\" = 3200,\n  \"Yucatán\" = 3350,\n  \"Zacatecas\" = 575,\n}\n\nexport enum EstadoFirma {\n  \"Aguascalientes\" = 5000,\n  \"Baja California\" = 5000,\n  \"Baja California Sur\" = 5000,\n  \"Campeche\" = 5000,\n  \"Chiapas\" = 5000,\n  \"Chihuahua\" = 5000,\n  \"Ciudad de México\" = 300,\n  \"Coahuila de Zaragoza\" = 5000,\n  \"Colima\" = 5000,\n  \"Durango\" = 5000,\n  \"Guanajuato\" = 5000,\n  \"Guerrero\" = 5000,\n  \"Hidalgo\" = 5000,\n  \"Jalisco\" = 5000,\n  \"México\" = 350,\n  \"Michoacán de Ocampo\" = 5000,\n  \"Morelos\" = 5000,\n  \"Nayarit\" = 5000,\n  \"Nuevo León\" = 5000,\n  \"Oaxaca\" = 5000,\n  \"Puebla\" = 500,\n  \"Querétaro\" = 5000,\n  \"Quintana Roo\" = 5000,\n  \"San Luis Potosí\" = 5000,\n  \"Sinaloa\" = 5000,\n  \"Sonora\" = 5000,\n  \"Tabasco\" = 5000,\n  \"Tamaulipas\" = 5000,\n  \"Tlaxcala\" = 5000,\n  \"Veracruz de Ignacio de la Llave\" = 5000,\n  \"Yucatán\" = 5000,\n  \"Zacatecas\" = 5000,\n}\n\nexport enum NivelCobertura {\n  lite = \"Lite\",\n  alpha = \"Alpha\",\n  alphaPlus = \"Alpha Plus\",\n}\n\nexport enum Coberturas {\n  investigacionRpp = \"Investigacion RPP\",\n  seguro = \"Seguro\",\n  firmaDeContrato = \"Firma de Contrat\",\n  investigacionRG = \"Investigación RG\",\n  gestionExtrajudicial = \"Gestion Extrajudicial\",\n  recuperacionInmueble = \"Recuperacion de Inmueble\",\n  recuperacionDeAdeudos = \"Recuperacion de Adeudos\",\n}\n\ntype Nivel = {\n  nombre: NivelCobertura;\n  coberturas: Coberturas[];\n};\n\nexport class Cotizador {\n  //Variables\n  renta: number;\n  estadoGarantia: EstadoEnGarantia;\n  estadoFirma: EstadoFirma;\n  nivelCobertura: Nivel | undefined;\n  private _perfilRiesgoIncumplimiento: number;\n  private _investigacionRg: number;\n  private _perfilRiesgoJuicioRecuperacion: number;\n  private _perfilRiesgoJuicioAdeudos: number;\n\n  //Constantes\n  private _factorInvestigacion: number;\n  private _factorSeguro: number;\n  private _factorFirma: number;\n  private _factorSolvencia: number;\n  private _factorIncumplimiento: number;\n  private _factorRecuperacion: number;\n  private _factorAdeudos: number;\n  private _niveles: Nivel[];\n\n  //Costos\n  costoInvestigacion: number;\n  costoSeguro: number;\n  costoFirma: number;\n  costoInvestigacionRg: number;\n  costoIncumplimiento: number;\n  costoRecuperacion: number;\n  costoAdeudos: number;\n\n  //Cotizacion\n  private _costoDeVentas: number;\n  private _utilidad: number;\n  precioDeVentas: number;\n  precioDeVentasMasIVA: number;\n  private _comisionInmobiliaria: number;\n\n  constructor(\n    renta: number,\n    estadoGarantia: EstadoEnGarantia,\n    estadoFirma: EstadoFirma,\n    nivelCobertura: NivelCobertura\n  ) {\n    this.renta = renta;\n    this.estadoGarantia = estadoGarantia;\n    this.estadoFirma = estadoFirma;\n\n    //TO DO: traer variables de fuente externa\n    this._investigacionRg = 21;\n    this._perfilRiesgoIncumplimiento = 0.2;\n    this._perfilRiesgoJuicioRecuperacion = 0.025;\n    this._perfilRiesgoJuicioAdeudos = 0.025;\n\n    //TO DO: traer constantes de fuente externa\n    this._factorInvestigacion = 1;\n    this._factorSeguro = 0.1308;\n    this._factorFirma = 1;\n    this._factorSolvencia = 1;\n    this._factorIncumplimiento = 180;\n    this._factorRecuperacion = 3718.88;\n    this._factorAdeudos = 14875.51;\n\n    //TO DO: traer niveles de fuente externa\n    this._niveles = [\n      {\n        nombre: NivelCobertura.alpha,\n        coberturas: [\n          Coberturas.investigacionRpp,\n          Coberturas.firmaDeContrato,\n          Coberturas.investigacionRG,\n          Coberturas.gestionExtrajudicial,\n          Coberturas.recuperacionInmueble,\n          Coberturas.recuperacionDeAdeudos,\n        ],\n      },\n      {\n        nombre: NivelCobertura.alphaPlus,\n        coberturas: [\n          Coberturas.investigacionRpp,\n          Coberturas.firmaDeContrato,\n          Coberturas.investigacionRG,\n          Coberturas.gestionExtrajudicial,\n          Coberturas.recuperacionInmueble,\n          Coberturas.recuperacionDeAdeudos,\n          Coberturas.seguro,\n        ],\n      },\n      {\n        nombre: NivelCobertura.lite,\n        coberturas: [\n          Coberturas.investigacionRG,\n          Coberturas.gestionExtrajudicial,\n          Coberturas.recuperacionInmueble,\n        ],\n      },\n    ];\n\n    this.nivelCobertura = this._niveles.find(\n      (niv) => niv.nombre === nivelCobertura\n    )\n      ? this._niveles.find((niv) => niv.nombre === nivelCobertura)\n      : this._niveles[0];\n\n    // axios(\"https://www.lycklig.com.mx/products/platos-rosa-con-dorado.json\")\n    //   .then((data) => console.log(data.data))\n    //   .catch((err) => console.log(err));\n\n    //setear a 0 costos\n    this.costoInvestigacion = 0;\n    this.costoSeguro = 0;\n    this.costoFirma = 0;\n    this.costoInvestigacionRg = 0;\n    this.costoIncumplimiento = 0;\n    this.costoRecuperacion = 0;\n    this.costoAdeudos = 0;\n\n    //setear a 0 cotización\n    this._costoDeVentas = 0;\n    this._utilidad = 0;\n    this.precioDeVentas = 0;\n    this.precioDeVentasMasIVA = 0;\n    this._comisionInmobiliaria = 0;\n\n    this.calcularCostos();\n    this.cotizar();\n  }\n\n  private calculoUtilidad(renta: number): number {\n    let resultado: number;\n\n    if (renta <= 350 / 0.05) {\n      resultado = 0.0428826023 * renta + 2412;\n    } else if (renta <= 8205.162) {\n      resultado = -0.0128826023 * renta + 2762;\n    } else if (renta <= 90000) {\n      resultado = 0.3295 * renta;\n    } else {\n      resultado = 0.23308 * renta + 8684;\n    }\n\n    if (renta <= 350 / 0.05) {\n      resultado += 350;\n    } else if (renta <= 2000 / 0.05) {\n      resultado += 0.05 * renta;\n    } else {\n      resultado += 2000;\n    }\n\n    resultado = resultado - 821.86;\n\n    return resultado;\n  }\n\n  calcularCostos() {\n    this.costoInvestigacion = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.investigacionRpp\n    )\n      ? this._factorInvestigacion * this.estadoGarantia\n      : 0;\n    this.costoSeguro = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.seguro\n    )\n      ? this._factorSeguro * this.renta\n      : 0;\n    this.costoFirma = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.firmaDeContrato\n    )\n      ? this._factorFirma * this.estadoFirma\n      : 0;\n    this.costoInvestigacionRg = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.investigacionRG\n    )\n      ? this._factorSolvencia * this._investigacionRg\n      : 0;\n    this.costoIncumplimiento = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.gestionExtrajudicial\n    )\n      ? this._factorIncumplimiento * this._perfilRiesgoIncumplimiento\n      : 0;\n    this.costoRecuperacion = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.recuperacionInmueble\n    )\n      ? this._factorRecuperacion * this._perfilRiesgoJuicioRecuperacion\n      : 0;\n    this.costoAdeudos = this.nivelCobertura?.coberturas.find(\n      (cober) => cober === Coberturas.recuperacionDeAdeudos\n    )\n      ? this._factorAdeudos * this._perfilRiesgoJuicioAdeudos\n      : 0;\n  }\n\n  cotizar(): number {\n    this._costoDeVentas =\n      this.costoInvestigacion +\n      this.costoSeguro +\n      this.costoFirma +\n      this.costoInvestigacionRg +\n      this.costoIncumplimiento +\n      this.costoRecuperacion +\n      this.costoAdeudos;\n\n    this._utilidad = this.calculoUtilidad(this.renta);\n\n    let precioVentasTemp = this._utilidad + this._costoDeVentas;\n\n    // Minimo de precio de venta ed de $3500 ya con IVA\n    if (precioVentasTemp * 1.16 < 3500) {\n      precioVentasTemp = 3500 / 1.16;\n    }\n\n    this.precioDeVentas = Math.floor(precioVentasTemp * 100) / 100;\n    this.precioDeVentasMasIVA =\n      Math.floor(this.precioDeVentas * 1.16 * 100) / 100;\n    this._comisionInmobiliaria =\n      Math.floor(this.precioDeVentasMasIVA * 0.1 * 100) / 100;\n\n    return this.precioDeVentasMasIVA;\n  }\n\n  cambiarRenta(renta: number): number {\n    this.renta = renta;\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n\n  cambiarEstadoGarantia(estado: EstadoEnGarantia): number {\n    this.estadoGarantia = estado;\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n\n  cambiarEstadoFirma(estado: EstadoFirma): number {\n    this.estadoFirma = estado;\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n\n  cambiarNivel(nivel: NivelCobertura): number {\n    this.nivelCobertura = this._niveles.find((niv) => niv.nombre === nivel)\n      ? this._niveles.find((niv) => niv.nombre === nivel)\n      : this._niveles[0];\n\n    this.calcularCostos();\n\n    return this.cotizar();\n  }\n}\n"],"names":[],"version":3,"file":"index.js.map"}